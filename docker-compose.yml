services:
  frontend:
    build:
      context: ./front
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./front:/app
      - /app/node_modules
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - VITE_API_URL=${VITE_API_URL:-http://localhost:8000}
    depends_on:
      - backend
    networks:
      - app_network
    restart: unless-stopped

  backend:
    build:
      context: ./back
      dockerfile: Dockerfile
    command: >-
      sh -c "
      until pg_isready -h $DB_HOST -p $DB_PORT -U $DB_USER; do echo 'Waiting for Postgres...'; sleep 1; done && 
      python manage.py migrate --noinput && 
      python back/init_orchestrator.py --superuser && 
      python manage.py runserver 0.0.0.0:8000 --settings=backend.settings
      "
    volumes:
      - ./back:/app
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY:-change-me}
      - DEBUG=${DEBUG:-True}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1,backend,frontend}
      - DB_NAME=${DB_NAME:-system_db}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres_password}
      - DB_HOST=${DB_HOST:-db}
      - DB_PORT=${DB_PORT:-5432}
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_DB=${REDIS_DB:-0}
      - N8N_WEBHOOK_SECRET=${N8N_WEBHOOK_SECRET:-change-me}
      - N8N_BASE_URL=${N8N_BASE_URL:-http://n8n:5678}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-http://localhost:3000,http://frontend:3000}
      - N8N_SENTIMENT_ANALYSIS_URL=${N8N_SENTIMENT_ANALYSIS_URL:-http://n8n:5678/webhook/REPLACE_ME}
      - N8N_STRATEGY_WORKFLOW_URL=${N8N_STRATEGY_WORKFLOW_URL:-http://n8n:5678/webhook/REPLACE_ME}
    depends_on:
      - db
      - redis
      - celery
      - n8n
    networks:
      - app_network
    restart: unless-stopped

  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db:/docker-entrypoint-initdb.d:ro
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-system_db}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres_password}
    ports:
      - "5432:5432"
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      retries: 5
      timeout: 5s

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 3

  celery:
    build:
      context: ./back
      dockerfile: Dockerfile
    command: celery -A celery_task worker --loglevel=info -Q celery,analytics
    volumes:
      - ./back:/app
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY:-change-me}
      - DEBUG=${DEBUG:-True}
      - DB_NAME=${DB_NAME:-system_db}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres_password}
      - DB_HOST=${DB_HOST:-db}
      - DB_PORT=${DB_PORT:-5432}
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_DB=${REDIS_DB:-0}
      - N8N_SENTIMENT_ANALYSIS_URL=${N8N_SENTIMENT_ANALYSIS_URL:-http://n8n:5678/webhook/REPLACE_ME}
      - N8N_STRATEGY_WORKFLOW_URL=${N8N_STRATEGY_WORKFLOW_URL:-http://n8n:5678/webhook/REPLACE_ME}
    depends_on:
      - db
      - redis
    networks:
      - app_network
    restart: unless-stopped

  n8n:
    image: n8nio/n8n:latest
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=${N8N_BASIC_AUTH_ACTIVE:-true}
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER:-admin}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD:-admin123}
      - N8N_HOST=${N8N_HOST:-0.0.0.0}
      - N8N_PORT=${N8N_PORT:-5678}
      - N8N_PROTOCOL=${N8N_PROTOCOL:-http}
      - N8N_WEBHOOK_URL=${N8N_WEBHOOK_URL:-http://n8n:5678/}
      - WEBHOOK_URL=${WEBHOOK_URL:-http://n8n:5678/}
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE:-UTC}
      - NODE_TLS_REJECT_UNAUTHORIZED=${NODE_TLS_REJECT_UNAUTHORIZED:-0}
      - N8N_EDITOR_BASE_URL=${N8N_EDITOR_BASE_URL:-http://localhost:5678}
      - WEBHOOK_TUNNEL_URL=${WEBHOOK_TUNNEL_URL:-http://localhost:5678}
      - N8N_WEBHOOKS_TEST_MODE=${N8N_WEBHOOKS_TEST_MODE:-false}
      - N8N_RUNNERS_ENABLED=${N8N_RUNNERS_ENABLED:-true}
    volumes:
      - n8n_data:/home/node/.n8n
    networks:
      - app_network
    restart: unless-stopped

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  n8n_data:
